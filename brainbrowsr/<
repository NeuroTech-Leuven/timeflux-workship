{% set freqs = [12,10,13,8] %}
graphs:
  - id: decode
    nodes:
    # Subscriber
    - id: sub
      module: timeflux.nodes.zmq
      class: Sub
      params:
        topics:
          - eeg
          - events
    # Filter bank
    - id: filter_bank
      module: timeflux_dsp.nodes.filters
      class: FilterBank
      params:
        filters:
          {% for freq in freqs %}
          {{ freq }}Hz:
            frequencies: [{{ freq-0.5 }}, {{ freq+0.5 }}]
          {% endfor %}
        rate: 256
        design: butter
    # Cut epochs
    - id: window
      module: timeflux.nodes.window
      class: Window
      params:
        length: 0.5
        step: 0.25
    # ML pipeline
    - id: pipeline
      module: timeflux.nodes.ml
      class: Pipeline
      params:
        mode: predict
        event_start_accumulation: calibration_start
        event_stop_accumulation: calibration_stop
        event_start_training: calibration_stop
        meta_label: [context, frequency]
        steps:
          - module: timeflux.estimators.transformers.shape
            class: Transpose
            args:
              axes: [0,2,1]
          - module: pyriemann.estimation
            class: Covariances
            args:
              estimator: lwf
          - module: pyriemann.classification
            class: MDM
    - id: pub
      module: timeflux.nodes.zmq
      class: Pub
      params:
        topic: events

    - id: debug
      module: timeflux.nodes.debug
      class: Dump
      params:
        fname: log.csv

    edges:
      - source: sub:eeg
        target: filter_bank
      - source: filter_bank
        target: window
      - source: window
        target: pipeline
      - source: sub:events
        target: pipeline
      - source: pipeline:events
        target: pub

      - source: window
        target: debug
    rate: 128
